[{"meta":{"category":"Functions"},"title":"minute","description":"Returns an integer number, between 0 and 59, corresponding to minutes in the given date.","syntax":"minute(date)","examples":"minute(now()) == 45"},{"meta":{"category":"Operators"},"title":"larger","description":"Returns true if the first argument is larger than the second.","syntax":"text > text\nboolean > boolean\ndate > date\nnumber > number\nlarger(text, text)\nlarger(boolean, boolean)\nlarger(date, date)\nlarger(number, number)","examples":"5 > 3 == true"},{"meta":{"category":"Functions"},"title":"hour","description":"Returns an integer number, between 0 and 23, corresponding to hour for the given date.","syntax":"hour(date)","examples":"hour(now()) == 17"},{"meta":{"category":"Functions"},"title":"log10","description":"Returns the base 10 logarithm of a number.","syntax":"log10(number)","examples":"log10(1000) == 3"},{"meta":{"category":"Operators"},"title":"not","description":"Returns the logical NOT of its argument.","syntax":"not boolean\nnot(boolean)","examples":"not true == false\nnot(false) == true"},{"meta":{"category":"Functions"},"title":"min","description":"Returns the smallest of zero or more numbers.","syntax":"min(number...)","examples":"min(4, 1, 5, 3) == 1"},{"meta":{"category":"Constants"},"title":"false","description":"","syntax":"false","examples":"false ? \"yes\" : \"no\" == \"no\""},{"meta":{"category":"Operators"},"title":"unaryMinus","description":"Negates a number.","syntax":"- number\nunaryMinus(number)","examples":"-1 + 2 == 1\nunaryMinus(42) == -42"},{"meta":{"category":"Functions"},"title":"contains","description":"Returns true if the second argument is found in the first.","syntax":"contains(text, text)","examples":"contains(\"notion\", \"ion\") == true"},{"meta":{"category":"Functions"},"title":"round","description":"Returns the value of a number rounded to the nearest integer.","syntax":"round(number)","examples":"round(4.4) == 4\nround(4.5) == 5"},{"meta":{"category":"Functions"},"title":"dateSubtract","description":"Subtract from a date. The last argument, unit, can be one of: \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", or \"milliseconds\".","syntax":"dateSubtract(date, number, text)","examples":"dateSubtract(date, amount, \"years\")\ndateSubtract(date, amount, \"quarters\")\ndateSubtract(date, amount, \"months\")\ndateSubtract(date, amount, \"weeks\")\ndateSubtract(date, amount, \"days\")\ndateSubtract(date, amount, \"hours\")\ndateSubtract(date, amount, \"minutes\")\ndateSubtract(date, amount, \"seconds\")\ndateSubtract(date, amount, \"milliseconds\")"},{"meta":{"category":"Functions"},"title":"day","description":"Returns an integer number corresponding to the day of the week for the given date: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.","syntax":"day(date)","examples":"day(now()) == 3"},{"meta":{"category":"Functions"},"title":"toNumber","description":"Parses a number from text.","syntax":"toNumber(text)\ntoNumber(number)\ntoNumber(boolean)\ntoNumber(date)","examples":"toNumber(\"42\") == 42\ntoNumber(false) == 0"},{"meta":{"category":"Functions"},"title":"cbrt","description":"Returns the cube root of a number.","syntax":"cbrt(number)","examples":"cbrt(8) == 2"},{"meta":{"category":"Functions"},"title":"exp","description":"Returns E^x, where x is the argument, and E is Euler's constant (2.718â€¦), the base of the natural logarithm.","syntax":"exp(number)","examples":"exp(1) == 2.718281828459045"},{"meta":{"category":"Functions"},"title":"date","description":"Returns an integer number, between 1 and 31, corresponding to day of the month for the given.","syntax":"date(date)","examples":"date(now()) == 13"},{"meta":{"category":"Operators"},"title":"mod","description":"Divides two numbers and returns their remainder.","syntax":"number % number\nmod(number, number)","examples":"7 % 5 == 2\nmod(3, 3) == 0"},{"meta":{"category":"Operators"},"title":"if","description":"Switches between two options based on another value.","syntax":"boolean ? value : value\nif(boolean, value, value)","examples":"true ? 1 : -1 == 1\nif(false, \"yes\", \"no\") == \"no\""},{"meta":{"category":"Functions"},"title":"replace","description":"Replaces the first match of a regular expression with a new value.","syntax":"replace(number, text, text)\nreplace(text, text, text)\nreplace(boolean, text, text)","examples":"replace(\"1-2-3\", \"-\", \"!\") == \"1!2-3\""},{"meta":{"category":"Operators"},"title":"and","description":"Returns the logical AND of its two arguments.","syntax":"boolean and boolean\nand(boolean, boolean)","examples":"true and false == false\nand(true, true) == true"},{"meta":{"category":"Operators"},"title":"largerEq","description":"Returns true if the first argument is larger than or equal to than the second.","syntax":"text >= text\nboolean >= boolean\ndate >= date\nnumber >= number\nlargerEq(text, text)\nlargerEq(boolean, boolean)\nlargerEq(date, date)\nlargerEq(number, number)","examples":"5 >= 3 == true\n4 >= 4 == true"},{"meta":{"category":"Functions"},"title":"month","description":"Returns an integer number, between 0 and 11, corresponding to month in the given date according to local time. 0 corresponds to January, 1 to February, and so on.","syntax":"month(date)","examples":"month(now()) == 11"},{"meta":{"category":"Functions"},"title":"log2","description":"Returns the base 2 logarithm of a number.","syntax":"log2(number)","examples":"log2(64) == 6"},{"meta":{"category":"Operators"},"title":"smallerEq","description":"Returns true if the first argument is smaller than or equal to than the second.","syntax":"text <= text\nboolean <= boolean\ndate <= date\nnumber <= number\nsmallerEq(text, text)\nsmallerEq(boolean, boolean)\nsmallerEq(date, date)\nsmallerEq(number, number)","examples":"10 <= 8 == false\n8 <= 8 == true"},{"meta":{"category":"Functions"},"title":"sign","description":"Returns the sign of the x, indicating whether x is positive, negative or zero.","syntax":"sign(number)","examples":"sign(4) == 1\nsign(-9) == -1\nsign(0) == 0"},{"meta":{"category":"Functions"},"title":"timestamp","description":"Returns an integer number from a Unix millisecond timestamp, corresponding to the number of milliseconds since January 1, 1970.","syntax":"timestamp(date)","examples":"timestamp(now()) == 1512593154718"},{"meta":{"category":"Operators"},"title":"unequal","description":"Returns false if its arguments are equal, and true otherwise.","syntax":"value != value\nunequal(value, value)","examples":"(6 * 9 != 42) == false\n(true != not false) == false"},{"meta":{"category":"Functions"},"title":"replaceAll","description":"Replaces all matches of a regular expression with a new value.","syntax":"replaceAll(number, text, text)\nreplaceAll(text, text, text)\nreplaceAll(boolean, text, text)","examples":"replaceAll(\"1-2-3\", \"-\", \"!\") == \"1!2!3\""},{"meta":{"category":"Functions"},"title":"id","description":"Returns a unique string id for each entry.","syntax":"id()","examples":"id() == \"c24c2601559948648076529b19fb6211\""},{"meta":{"category":"Operators"},"title":"add","description":"Adds two numbers and returns their sum, or concatenates two strings.","syntax":"number + number\ntext + text\nadd(number, number)\nadd(text, text)","examples":"3 + 4 = 7\nadd(1, 3) == 4\n\"add\" + \"text\" == \"addtext\""},{"meta":{"category":"Functions"},"title":"year","description":"Returns a number corresponding to the year of the given date.","syntax":"year(date)","examples":"year(now()) == 1984"},{"meta":{"category":"Operators"},"title":"equal","description":"Returns true if its arguments are equal, and false otherwise.","syntax":"value == value\nequal(value, value)","examples":"(3 * 5 == 15) == true\nequal(false, not true) == true"},{"meta":{"category":"Functions"},"title":"fromTimestamp","description":"Returns a date constructed from a Unix millisecond timestamp, corresponding to the number of milliseconds since January 1, 1970.","syntax":"fromTimestamp(number)","examples":"fromTimestamp(2000000000000) == Tue May 17 2033"},{"meta":{"category":"Constants"},"title":"true","description":"","syntax":"true","examples":"true ? \"yes\" : \"no\" == \"yes\""},{"meta":{"category":"Functions"},"title":"concat","description":"Concatenates its arguments and returns the result.","syntax":"concat(text...)","examples":"\"dog\" +\"go\" == \"doggo\"\nconcat(\"dog\", \"go\") == \"doggo\""},{"meta":{"category":"Functions"},"title":"sqrt","description":"Returns the positive square root of a number.","syntax":"sqrt(number)","examples":"sqrt(144) == 12"},{"meta":{"category":"Operators"},"title":"subtract","description":"Subtracts two numbers and returns their difference.","syntax":"number - number\nsubtract(number, number)","examples":"3 - 1 == 2\nsubtract(4, 5) == -1"},{"meta":{"category":"Functions"},"title":"slice","description":"Extracts a substring from a string from the start index (inclusively) to the end index (optional and exclusively).","syntax":"slice(text, number)\nslice(text, number, number)","examples":"slice(\"Hello world\", 1, 5) == \"ello\"\nslice(\"notion\", 3) == \"ion\""},{"meta":{"category":"Functions"},"title":"dateBetween","description":"Returns the time between two dates. The last argument, unit, can be one of: \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", or \"milliseconds\".","syntax":"dateBetween(date, date, text)","examples":"dateBetween(date, date2, \"years\")\ndateBetween(date, date2, \"quarters\")\ndateBetween(date, date2, \"months\")\ndateBetween(date, date2, \"weeks\")\ndateBetween(date, date2, \"days\")\ndateBetween(date, date2, \"hours\")\ndateBetween(date, date2, \"minutes\")\ndateBetween(date, date2, \"seconds\")\ndateBetween(date, date2, \"milliseconds\")"},{"meta":{"category":"Operators"},"title":"pow","description":"Returns base to the exponent power, that is, baseexponent.","syntax":"number ^ number\npow(number, number)","examples":"5 ^ 3 == 125\npow(2, 6) == 64"},{"meta":{"category":"Functions"},"title":"max","description":"Returns the largest of zero or more numbers.","syntax":"max(number...)","examples":"max(5, 2, 9, 3) == 9"},{"meta":{"category":"Functions"},"title":"floor","description":"Returns the largest integer less than or equal to a number.","syntax":"floor(number)","examples":"floor(2.8) == 2"},{"meta":{"category":"Functions"},"title":"format","description":"Formats its argument as a string.","syntax":"format(value)","examples":"format(42) == \"42\"\nformat(true) == \"true\"\nformat(now()) == \"Wed Dec 31 1969 16:00:00 GMT-0800 (PST)\""},{"meta":{"category":"Operators"},"title":"divide","description":"Divides two numbers and returns their quotient.","syntax":"number / number\ndivide(number, number)","examples":"12 / 4 == 3\ndivide(12, 3) == 4"},{"meta":{"category":"Functions"},"title":"now","description":"Returns the current date and time.","syntax":"now()","examples":"now() == Feb 2, 1996"},{"meta":{"category":"Functions"},"title":"abs","description":"Returns the absolute value of a number.","syntax":"abs(number)","examples":"abs(-3) == 3"},{"meta":{"category":"Functions"},"title":"end","description":"Returns the end of a date range.","syntax":"end(date)","examples":"end(prop(\"Date\")) == Feb 2, 1996"},{"meta":{"category":"Functions"},"title":"start","description":"Returns the start of a date range.","syntax":"start(date)","examples":"start(prop(\"Date\")) == Feb 2, 1996"},{"meta":{"category":"Functions"},"title":"join","description":"Inserts the first argument between the rest and returns their concatenation.","syntax":"join(text...)","examples":"join(\"-\", \"a\", \"b\", \"c\") == \"a-b-c\""},{"meta":{"category":"Functions"},"title":"ceil","description":"Returns the smallest integer greater than or equal to a number.","syntax":"ceil(number)","examples":"ceil(4.2) == 5"},{"meta":{"category":"Constants"},"title":"pi","description":"The ratio of a circle's circumference to its diameter.","syntax":"pi","examples":"2 * pi == 6.283185307179586"},{"meta":{"category":"Functions"},"title":"test","description":"Tests if a string matches a regular expression.","syntax":"test(number, text)\ntest(text, text)\ntest(boolean, text)","examples":"test(\"1-2-3\", \"-\") == true"},{"meta":{"category":"Operators"},"title":"multiply","description":"Multiplies two numbers and returns their product.","syntax":"number * number\nmultiply(number, number)","examples":"6 * 9 == 54\nmultiply(2, 10) == 20"},{"meta":{"category":"Functions"},"title":"dateAdd","description":"Add to a date. The last argument, unit, can be one of: \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", or \"milliseconds\".","syntax":"dateAdd(date, number, text)","examples":"dateAdd(date, amount, \"years\")\ndateAdd(date, amount, \"quarters\")\ndateAdd(date, amount, \"months\")\ndateAdd(date, amount, \"weeks\")\ndateAdd(date, amount, \"days\")\ndateAdd(date, amount, \"hours\")\ndateAdd(date, amount, \"minutes\")\ndateAdd(date, amount, \"seconds\")\ndateAdd(date, amount, \"milliseconds\")"},{"meta":{"category":"Functions"},"title":"length","description":"Returns the length of a string.","syntax":"length(text)","examples":"length(\"Hello world\") == 11"},{"meta":{"category":"Operators"},"title":"unaryPlus","description":"Converts its argument into a number.","syntax":"+ value\nunaryPlus(value)","examples":"+ \"42\" == 42\nunaryPlus(true) == 1"},{"meta":{"category":"Operators"},"title":"smaller","description":"Returns true if the first argument is smaller than the second.","syntax":"text < text\nboolean < boolean\ndate < date\nnumber < number\nsmaller(text, text)\nsmaller(boolean, boolean)\nsmaller(date, date)\nsmaller(number, number)","examples":"10 < 8 == false"},{"meta":{"category":"Functions"},"title":"empty","description":"Tests if a value is empty.","syntax":"empty(number)\nempty(text)\nempty(boolean)\nempty(date)","examples":"empty(\"\") == true"},{"meta":{"category":"Functions"},"title":"ln","description":"Returns the natural logarithm of a number.","syntax":"ln(number)","examples":"ln(e) == 1"},{"meta":{"category":"Functions"},"title":"formatDate","description":"Format a date using the Moment standard time format string.","syntax":"formatDate(date, text)","examples":"formatDate(now(), \"MMMM D YYYY, HH:mm\") == March 30 2010, 12:00\nformatDate(now(), \"YYYY/MM/DD, HH:mm\") == 2010/03/30, 12:00\nformatDate(now(), \"MM/DD/YYYY, HH:mm\") == 03/30/2010, 12:00\nformatDate(now(), \"HH:mm A\") == 12:00 PM\nformatDate(now(), \"M/D/YY\") == 3/30/10"},{"meta":{"category":"Constants"},"title":"e","description":"The base of the natural logarithm.","syntax":"e","examples":"e == 2.718281828459045"},{"meta":{"category":"Operators"},"title":"or","description":"Returns the logical OR of its two arguments.","syntax":"boolean or boolean\nor(boolean, boolean)","examples":"false or true == true\nor(false, false) == false"}]